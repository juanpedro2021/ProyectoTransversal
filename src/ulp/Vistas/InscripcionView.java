
package ulp.Vistas;

import ulp.Entidades.Alumno;
import ulp.Entidades.Materia;
import ulp.Entidades.Inscripcion;
import ulp.AccesoADatos.AlumnoData;
import ulp.AccesoADatos.MateriaData;
import ulp.AccesoADatos.InscripcionData;
import java.util.ArrayList;
import java.util.List;
import javax.swing.table.DefaultTableModel;




public class InscripcionView extends javax.swing.JInternalFrame {
    
    
    
    private List<Materia> listaM;
    private List<Alumno> listaA;
    
    private InscripcionData inscData;
    private AlumnoData aData;
    private MateriaData mData;
    
    private DefaultTableModel modelo;
    
    
    public InscripcionView() {
        initComponents();
        
        aData = new AlumnoData();
        listaA = aData.listarAlumnos();
        modelo = new DefaultTableModel();
        mData = new MateriaData();
        inscData = new InscripcionData();
        
        cargaAlumnos();
        armarCabeceraTabla();
        
        private void cargaAlumnos(){
        for (Alumno item: listaA){
            jcbAlumno.addItem(item);
            
        }
    }
    
    private void armarCabeceraTabla(){
        ArrayList<Object> filaCabecera = new ArrayList<>();
        filaCabecera.add("Id");
        filaCabecera.add("Nombre");
        filaCabecera.add("Anio");
        for(Object it: filaCabecera){
            modelo.addColumn(it);
        }
        jTable1.setModel(modelo);
        }
    private void borrarFilaTabla(){
        int indice = modelo.getRowCount() -1;
        
        for (int i = indice;i>=0; i--){
            modelo.removeRow(i);
        }}
    
    private void cargaDatosNoInscriptas(){
        
        Alumno selec = (Alumno)jcbAlumno.getSelectedItem();
        listaM = (ArrayList) inscData.obtenerMateriasNoCursadas(selec.getIdAlumno());
        for (Materia m: listaM){
            modelo.addRow (new Object[]{m.getIdMateria(), m.getNombre(), m.getAnio()});
            
            
        }
        
    }
    
    private void cargaDatosInscriptas(){
        
        Alumno selec = (Alumno)jcbAlumno.getSelectedItem();
        List <Materia> lista = (ArrayList) inscData.obtenerMateriasCursadas(selec.getIdAlumno());
        for (Materia m: lista){
            modelo.addRow (new Object[]{m.getIdMateria(), m.getNombre(), m.getAnio()});
            
            
        }
    }

        
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jlFormDeInsc = new javax.swing.JLabel();
        jlSeleccAlu = new javax.swing.JLabel();
        jlListMat = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jrbMatInsc = new javax.swing.JRadioButton();
        jrbMatNoInsc = new javax.swing.JRadioButton();
        jcbAlumno = new javax.swing.JComboBox<>();
        jbInscribir = new javax.swing.JButton();
        jbAnularInsc = new javax.swing.JButton();
        jbSalir = new javax.swing.JButton();

        jlFormDeInsc.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jlFormDeInsc.setText("Formulario de Inscripción");

        jlSeleccAlu.setText("Seleccione un alumno");

        jlListMat.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jlListMat.setText("Listado de Materias");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jrbMatInsc.setText("Materias Inscriptas");

        jrbMatNoInsc.setText("Materias No Inscriptas");

        jbInscribir.setText("Inscribir");

        jbAnularInsc.setText("Anular Inscripción");

        jbSalir.setText("Salir");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(99, 99, 99)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jlSeleccAlu)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jcbAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jrbMatInsc)
                                .addGap(124, 124, 124)
                                .addComponent(jrbMatNoInsc))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(54, 54, 54)
                                .addComponent(jlFormDeInsc))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(92, 92, 92)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jbInscribir, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(52, 52, 52)
                                .addComponent(jbAnularInsc)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jbSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(208, 208, 208)
                        .addComponent(jlListMat)))
                .addContainerGap(46, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlFormDeInsc)
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlSeleccAlu)
                    .addComponent(jcbAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jlListMat)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jrbMatInsc)
                    .addComponent(jrbMatNoInsc))
                .addGap(58, 58, 58)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbInscribir)
                    .addComponent(jbAnularInsc)
                    .addComponent(jbSalir))
                .addGap(47, 47, 47))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void jrbMatInscActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
        borrarFilaTabla();
        jrbMatNoInsc.setSelected(false);
        cargaDatosInscriptas();
        jbAnularInsc.setEnabled(true);
        jbInscribir.setEnabled(false);
    }                                          

    private void jrbMatNoInscActionPerformed(java.awt.event.ActionEvent evt) {                                             
        // TODO add your handling code here:
        borrarFilaTabla();
        jrbMatInsc.setSelected(false);
        cargaDatosNoInscriptas();
        jbAnularInsc.setEnabled(false);
        jbInscribir.setEnabled(true);
    }
 private void jbInscribirActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
        int filaSeleccionada=jTable1.getSelectedRow();
        if(filaSeleccionada!=-1){
            Alumno a=(Alumno)jcbAlumno.getSelectedItem();
            
            int idMateria=(Integer)modelo.getValueAt(filaSeleccionada, 0);
            String nombreMateria=(String)modelo.getValueAt(filaSeleccionada, 1);
            int anio=(Integer)modelo.getValueAt(filaSeleccionada, 2);
            
            Materia m=new Materia (idMateria, nombreMateria, anio, true);
            
            Inscripcion i=new Inscripcion(a,m,0);
            inscData.guardarInscripcion(i);
            borrarFilaTabla();
            
            
            
        }
    }    
 private void jbAnularInscActionPerformed(java.awt.event.ActionEvent evt) {                                             
        // TODO add your handling code here:
        
        int filaSeleccionada=jTable1.getSelectedRow();
        if(filaSeleccionada!=-1){
            Alumno a=(Alumno)jcbAlumno.getSelectedItem();
            
            int idMateria=(Integer)modelo.getValueAt(filaSeleccionada, 0);
            inscData.borrarInscripcionMateriaAlumno(a.getIdAlumno(), idMateria);
            
            borrarFilaTabla();}
        
    }                                            

    private void jbSalirActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
        dispose();
    }                                       


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton jbAnularInsc;
    private javax.swing.JButton jbInscribir;
    private javax.swing.JButton jbSalir;
    private javax.swing.JComboBox<Alumno> jcbAlumno;
    private javax.swing.JLabel jlFormDeInsc;
    private javax.swing.JLabel jlListMat;
    private javax.swing.JLabel jlSeleccAlu;
    private javax.swing.JRadioButton jrbMatInsc;
    private javax.swing.JRadioButton jrbMatNoInsc;
    // End of variables declaration//GEN-END:variables
}
